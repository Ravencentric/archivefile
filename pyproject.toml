[tool.poetry]
name = "archivefile"
version = "0.3.3"
description = "Unified interface for tar, zip, sevenzip, and rar files"
authors = ["Ravencentric <me@ravencentric.cc>"]
readme = "README.md"
license = "Unlicense"
packages = [{ include = "archivefile", from = "src" }]
keywords = [
    "archive",
    "archivefile",
    "zipfile",
    "tarfile",
    "sevenzip",
    "rarfile",
]
homepage = "https://archivefile.ravencentric.cc"
repository = "https://github.com/Ravencentric/archivefile"
documentation = "https://archivefile.ravencentric.cc"
classifiers = [
    "License :: OSI Approved :: The Unlicense (Unlicense)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.10"
rarfile = ">=4.2"
py7zr = ">=0.21.1"
typing-extensions = ">=4.12.2"
pydantic = ">=2.8.2"
pycryptodomex = ">=3.20.0"
pyppmd = ">=1.1.0"
zipfile-deflate64 = ">=0.2.0"
pybcj = ">=1.0.2"
multivolumefile = ">=0.2.3"
rich = { version = ">=13.7.1", optional = true }
bigtree = { version = ">=0.19.2", optional = true }
brotli = { version = ">=1.1.0", markers = "platform_python_implementation == 'CPython'" }
brotlicffi = { version = ">=1.1.0.0", markers = "platform_python_implementation == 'PyPy'" }
importlib-metadata = { version = ">=8.0.0", python = "<3.10" }
eval-type-backport = { version = ">=0.2.0", python = "<3.10" }

[tool.poetry.extras]
bigtree = ["bigtree"]
rich = ["rich"]
all = ["bigtree", "rich"]

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.1"
ruff = "^0.5.1"
pytest = "^8.2.2"
coverage = "^7.5.4"
pre-commit = "^3.7.1"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.28"
mkdocstrings = { extras = ["python"], version = "^0.25.1" }
mkdocs-autorefs = "^1.0.1"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = ["I"]
fixable = ["ALL"]

[tool.mypy]
strict = true
pretty = true

[[tool.mypy.overrides]]
module = ["rarfile"]
ignore_missing_imports = true

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:tarfile"
]

[tool.coverage.run]
omit = ["src/archivefile/_version.py", "tests/*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
